{"version":3,"sources":["pages/Leaflet/osm-providers.js","pages/Leaflet/polygon.js"],"names":["maptiler","url","attribution","PolygonMap","useState","lat","lng","center","mapLayers","setMapLayers","mapRef","useRef","title","className","zoom","ref","position","onCreated","e","console","log","layerType","layer","_leaflet_id","layers","id","latlngs","getLatLngs","onEdited","_layers","Object","values","map","editing","l","onDeleted","filter","draw","rectangle","polyline","circle","circlemarker","marker","osm","JSON","stringify"],"mappings":"uIAAe,KACXA,SAAU,CACNC,IACI,mFACJC,YACI,sI,uJC8FGC,UAzFI,WAAO,IAAD,EACKC,mBAAS,CAAEC,IAAK,QAASC,IAAK,UADnC,mBAChBC,EADgB,aAEWH,mBAAS,KAFpB,mBAEhBI,EAFgB,KAELC,EAFK,KAKjBC,EAASC,mBA4Cf,OACE,oCACE,kBAAC,IAAD,CAAQC,MAAM,4BAEd,yBAAKC,UAAU,OACb,yBAAKA,UAAU,mBACb,sFAEA,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAKN,OAAQA,EAAQO,KAtDZ,GAsD8BC,IAAKL,GAC1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEM,SAAS,WACTC,UAvDE,SAACC,GACjBC,QAAQC,IAAIF,GADW,IAGfG,EAAqBH,EAArBG,UAAWC,EAAUJ,EAAVI,MACnB,GAAkB,YAAdD,EAAyB,CAAC,IACpBE,EAAgBD,EAAhBC,YAERd,GAAa,SAACe,GAAD,4BACRA,GADQ,CAEX,CAAEC,GAAIF,EAAaG,QAASJ,EAAMK,aAAa,WA+CrCC,SA1CE,SAACV,GACjBC,QAAQC,IAAIF,GADW,IAGXW,EACRX,EADFM,OAAUK,QAGZC,OAAOC,OAAOF,GAASG,KAAI,YAA+B,IAA5BT,EAA2B,EAA3BA,YAAaU,EAAc,EAAdA,QACzCxB,GAAa,SAACe,GAAD,OACXA,EAAOQ,KAAI,SAACE,GAAD,OACTA,EAAET,KAAOF,EAAT,eACSW,EADT,CACYR,QAAQ,eAAMO,EAAQP,QAAQ,MACtCQ,YAgCIC,UA1BG,SAACjB,GAClBC,QAAQC,IAAIF,GADY,IAGZW,EACRX,EADFM,OAAUK,QAGZC,OAAOC,OAAOF,GAASG,KAAI,YAAsB,IAAnBT,EAAkB,EAAlBA,YAC5Bd,GAAa,SAACe,GAAD,OAAYA,EAAOY,QAAO,SAACF,GAAD,OAAOA,EAAET,KAAOF,YAoB3Cc,KAAM,CACJC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,cAAc,EACdC,QAAQ,MAKd,kBAAC,IAAD,CACEzC,IAAK0C,IAAI3C,SAASC,IAClBC,YAAayC,IAAI3C,SAASE,eAI9B,yBAAKW,UAAU,aAAa+B,KAAKC,UAAUrC,EAAW,EAAG","file":"static/js/45.0c7ef5ea.chunk.js","sourcesContent":["export default {\n    maptiler: {\n        url:\n            \"https://api.maptiler.com/maps/basic/256/{z}/{x}/{y}.png?key=fXmTwJM642uPLZiwzhA1\",\n        attribution:\n            '&copy; <a href=\"https://www.maptiler.com/\">MapTiler</a> &copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    },\n};\n","import React, { useState } from \"react\";\nimport Header from \"components/Header\";\n\nimport { Map, TileLayer, FeatureGroup } from \"react-leaflet\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport osm from \"./osm-providers\";\nimport { useRef } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-draw/dist/leaflet.draw.css\";\n\nconst PolygonMap = () => {\n  const [center, setCenter] = useState({ lat: 24.4539, lng: 54.3773 });\n  const [mapLayers, setMapLayers] = useState([]);\n\n  const ZOOM_LEVEL = 12;\n  const mapRef = useRef();\n\n  const _onCreate = (e) => {\n    console.log(e);\n\n    const { layerType, layer } = e;\n    if (layerType === \"polygon\") {\n      const { _leaflet_id } = layer;\n\n      setMapLayers((layers) => [\n        ...layers,\n        { id: _leaflet_id, latlngs: layer.getLatLngs()[0] },\n      ]);\n    }\n  };\n\n  const _onEdited = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n\n    Object.values(_layers).map(({ _leaflet_id, editing }) => {\n      setMapLayers((layers) =>\n        layers.map((l) =>\n          l.id === _leaflet_id\n            ? { ...l, latlngs: { ...editing.latlngs[0] } }\n            : l\n        )\n      );\n    });\n  };\n\n  const _onDeleted = (e) => {\n    console.log(e);\n    const {\n      layers: { _layers },\n    } = e;\n\n    Object.values(_layers).map(({ _leaflet_id }) => {\n      setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\n    });\n  };\n\n  return (\n    <>\n      <Header title=\"React Leaflet - Polygon\" />\n\n      <div className=\"row\">\n        <div className=\"col text-center\">\n          <h2>React-leaflet - Create, edit and delete polygon on map</h2>\n\n          <div className=\"col\">\n            <Map center={center} zoom={ZOOM_LEVEL} ref={mapRef}>\n              <FeatureGroup>\n                <EditControl\n                  position=\"topright\"\n                  onCreated={_onCreate}\n                  onEdited={_onEdited}\n                  onDeleted={_onDeleted}\n                  draw={{\n                    rectangle: false,\n                    polyline: false,\n                    circle: false,\n                    circlemarker: false,\n                    marker: false,\n                  }}\n                />\n              </FeatureGroup>\n\n              <TileLayer\n                url={osm.maptiler.url}\n                attribution={osm.maptiler.attribution}\n              />\n            </Map>\n\n            <pre className=\"text-left\">{JSON.stringify(mapLayers, 0, 2)}</pre>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PolygonMap;\n"],"sourceRoot":""}